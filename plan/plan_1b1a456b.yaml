aggregator:
  defaults: plan/defaults/aggregator.yaml
  settings:
    best_state_path: save/torch_cnn_mnist_best.pbuf
    db_store_rounds: 1
    init_state_path: save/torch_cnn_mnist_init.pbuf
    last_state_path: save/torch_cnn_mnist_last.pbuf
    rounds_to_train: 10
  template: openfl.component.Aggregator
assigner:
  defaults: plan/defaults/assigner.yaml
  settings:
    task_groups:
    - name: train_and_validate
      percentage: 1.0
      tasks:
      - aggregated_model_validation
      - train
      - locally_tuned_model_validation
  template: openfl.component.RandomGroupedAssigner
collaborator:
  defaults: plan/defaults/collaborator.yaml
  settings:
    db_store_rounds: 1
    delta_updates: false
    opt_treatment: RESET
  template: openfl.component.Collaborator
compression_pipeline:
  defaults: plan/defaults/compression_pipeline.yaml
  settings: {}
  template: openfl.pipelines.NoCompressionPipeline
data_loader:
  defaults: plan/defaults/data_loader.yaml
  settings:
    batch_size: 256
    collaborator_count: 2
    data_group_name: market
  template: code.ptmarket.PyTorchMarket
network:
  defaults: plan/defaults/network.yaml
  settings:
    agg_addr: nnlicv838.inn.intel.com
    agg_port: auto
    cert_folder: cert
    client_reconnect_interval: 5
    disable_client_auth: false
    disable_tls: false
    hash_salt: auto
  template: openfl.federation.Network
task_runner:
  defaults: plan/defaults/task_runner.yaml
  settings: {}
  template: code.models.ResNet50
tasks:
  aggregated_model_validation:
    function: validate
    kwargs:
      apply: global
      metrics:
      - acc
  defaults: plan/defaults/tasks_torch.yaml
  locally_tuned_model_validation:
    function: validate
    kwargs:
      apply: local
      metrics:
      - acc
  settings: {}
  train:
    function: train_batches
    kwargs:
      metrics:
      - loss
